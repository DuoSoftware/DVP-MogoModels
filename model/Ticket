

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var ObjectId = Schema.ObjectId;


var eventSchema = new Schema({
    type: {type: String, enum : ['comment','status','notification','reassign'], default: 'comment', required: true},
    body: {}
});

var ticketSchema = new Schema({

    created_at: {type:Date,default: Date.now,require:true},
    updated_at: {type:Date,default: Date.now,require:true},
    due_at: Date,
    active: Boolean,
    is_sub_ticket: {type: Boolean, required: true},
    type: {type: String, enum : ['question','complain','incident','action'], default: 'question', required: true},
    subject: { type: String, required: true, trim: true},
    reference: { type: String, required: true, unique: true},
    description: { type: String, required: true, trim: true},
    priority: {type: String, enum : ['urgent','high','normal','low'], default: 'normal', required: true},
    status: {type: String, enum : ['new','open','progressing','parked','solved','closed'], default: 'new', required: true},
    requester: {type: ObjectId,ref: 'ExternalUser'},
    submitter: {type: ObjectId,ref: 'User'},
    assignee: {type: ObjectId,ref: 'User'},
    assignee_group: [{type: ObjectId,ref: 'UserGroup'}],
    company: { type: Number, required: true },
    tenant: { type: Number, required: true },
    collaborators: [{type: ObjectId,ref: 'User'}],
    attachments: [{type: ObjectId,ref: 'Attachment'}],
    sub_tickets: [{type: ObjectId,ref: 'Ticket'}],
    related_tickets: [{type: ObjectId,ref: 'Ticket'}],
    merged_tickets: [{type: ObjectId,ref: 'Ticket'}],
    engagement_session: {type: ObjectId, ref: 'EngagementSession'},
    channel: {type: String, required: true},
    tags: [String],
    custom_fields: [{field:{type:String, require: true},value:{}}],
    sla: [{type: ObjectId,ref: 'SLA'}],
    comments: [{type: ObjectId,ref: 'Comment'}],
    events: [eventSchema],
    SLAViolated: Boolean

});



ticketSchema.index({subject:"text", description:"text"});

var TicketEvent = mongoose.model('Event', eventSchema);
var Ticket = mongoose.model('Ticket', ticketSchema);
module.exports.Ticket = Ticket;
module.exports.TicketEvent = TicketEvent;
